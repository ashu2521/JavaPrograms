import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class EqualStacks {
    static int findLargest(int s1, int s2, int s3){
        if((s1 >= s2 && s1 > s3) || (s1 > s2 && s1 >= s3))
            return 1;
        else if( s1 < s2 && s2 >= s3 )
            return 2;
        else
            return 3;
        }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n1 = in.nextInt();
        int n2 = in.nextInt();
        int n3 = in.nextInt();
        int sum1 = 0, sum2 = 0, sum3 = 0;
        Stack<Integer> stack1 = new Stack<Integer>();
        Stack<Integer> stack2 = new Stack<Integer>();
        Stack<Integer> stack3 = new Stack<Integer>();
        for(int h1_i=0; h1_i < n1; h1_i++){
            int h1 = in.nextInt();
            stack1.add(h1);
            sum1+=h1;
        }
        for(int h2_i=0; h2_i < n2; h2_i++){
            int h2 = in.nextInt();
            sum2+=h2;
        }
        for(int h3_i=0; h3_i < n3; h3_i++){
            int h3 = in.nextInt();
            stack3.add(h3);
            sum3+=h3;
        }
        while(!stack1.empty() && !stack2.empty() && !stack3.empty() ){
            if(sum1 == sum2 && sum2 == sum3)
                break;
            
            switch(findLargest(sum1, sum2, sum3)){
                case 1:
                    sum1-=stack1.pop();
                    break;
                        
                case 2:
                    sum2-=stack2.pop();
                    break;
                    
                case 3:
                	sum3-=stack3.pop();    
                	break;
            }
        }
        if(stack1.isEmpty() || stack2.isEmpty() || stack3.isEmpty())
            System.out.println(0);
        else 
            System.out.println(sum1);
    }
}
