package Algorithm;

import java.util.Scanner;

public class DP_CoinChange {
	static long getWays(int n, int[] c){
        // Complete this function
		long arr[][] = new long[c.length + 1][n+1];
		for(int i = 1; i <= c.length; i++){
			for(int j = 1; j <= n; j++){
				if(c[i] > n)
					arr[i][j] = 0;
				for(int k = n; k > 0; k -= c[i]){
					
				}
			}
		}
		System.out.println(2 || 0);
		return 0;
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int m = in.nextInt();
        int[] c = new int[m];
        for(int c_i=0; c_i < m; c_i++){
            c[c_i] = in.nextInt();
        }
        // Print the number of ways of making change for 'n' units using coins having the values given by 'c'
        long ways = getWays(n, c);
    }
}
